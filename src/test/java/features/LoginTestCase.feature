# language: ru
@all
Функция: Авторизация

  @fail
  Структура сценария: Вход c неверным логином
    Дано открывает главную страницу
    И переходит на страницу входа в аккаунт
    И вводит в поле логин "<неверный логин>"
    И нажимает продолжить
    То отобразилось сообщение об ошибке Такой логин не подойдет

  Примеры:
    |неверный логин|
    |логинРусскимиБуквами|
    |ВторойПримерЛогина|
    |ТретийПримерЛогина|

  @fail
  Сценарий: Ввод заданного логина
    Дано открывает главную страницу
    И переходит на страницу входа в аккаунт
    И вводит в поле логин Тест Регулярки 1234Test-Regex

  @fail
  Структура сценария: Вход c неверным паролем
    Дано открывает главную страницу
    И переходит на страницу входа в аккаунт
    И вводит в поле логин "<верный логин>"
    И нажимает продолжить
    И вводит пароль "<неверный пароль>"
    Когда нажимает продолжить
    То отобразилось сообщение об ошибке Неверный пароль

    Примеры:
      |верный логин|неверный пароль|
      |1@mail.ru   |123456         |
      |decorepanno |654321         |
      |decorpanno@mail.ru| password|

  @success
  Сценарий: Вход в существующий аккаунт
    Дано открывает главную страницу
    И переходит на страницу входа в аккаунт
    И вводит существующий логин
    И нажимает продолжить
    И вводит пароль
    Когда нажимает продолжить
    То пользователь вошел в аккаунт

    #Передача значений в аргументы

  @success
  Сценарий: Пример передач данных в разном формате
    Дано передача данных, перечисленных через запятую, в ArrayList первый, второй, третий
#    И передача данных, перечисленных через разделитель, в ArrayList, аннотация Delimiter Значение1 и Значение2 И Значение3
#    И передача данных, записанных в виде таблицы с одной колонкой
#      | Значение1 |
#      | Значение2 |
#      | Значение3 |
#    И передача данных, записанных в виде таблицы с двумя колонками
#      | Значение1 | true  |
#      | Значение2 | false |
#      | Значение3 | true  |
#    # Передача данных в виде таблицы с большим количеством колонок возможна двумя способами:
#    И передача данных, используя DataTable
#    # DataTable – это класс, который эмулирует табличное представление данных
#      | Название  | Тип   | Значение|
#      | Значение1 | true  | 5       |
#      | Значение2 | false | 8       |
#      | Значение3 | true  | 2       |
#    И передача данных, используя Class
#    И передача многострочных аргументов
#    И передача Data